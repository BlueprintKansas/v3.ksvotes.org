on:
  pull_request:
  push:
    branches:
      - main

# Cancel redundant builds on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

name: Test and Lint
jobs:
  lint:
    name: Lint files
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.18]
        node-version: [16.20]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - uses: actions/cache@v3
        with:
          key: pre-commit-dot-cache-${{ hashFiles('.pre-commit-config.yaml') }}
          path: ~/.cache/pre-commit
      - name: Install Dev Dependencies
        run: |
          make dev-setup
          npm ci
      - name: Lint
        run: make lint
  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.18]
        node-version: [16.20]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Setup env
        run: |
          cp .env-dist .env
          echo AB_PRIMARY_DEADLINE=`date --date='tomorrow' -I`"T00:00:00" >> .env
          echo USPS_USER_ID=${{ secrets.USPS_USER_ID }} >> .env
          cat .env | grep -v ^# >> $GITHUB_ENV
          echo "cache_dir = /home/runner/work/.pytest_cache" >> pyenv.ini
      - name: Add /etc/hosts entries
        run: |
          echo '127.0.0.1  db' | sudo tee -a /etc/hosts
          echo '127.0.0.1  redis' | sudo tee -a /etc/hosts
          echo '127.0.0.1  test.ksvotes.org' | sudo tee -a /etc/hosts
          cat /etc/hosts
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install --yes wait-for-it
          make dev-setup
          playwright install --with-deps
      - name: Build docker images
        run: make ci-start
        env:
          DOCKER_BUILDKIT: 1
          ENV_NAME: ci
      - name: Install Chrome driver
        uses: nanasess/setup-chromedriver@v2
      - name: Run tests
        run: make ci-test
      - name: Browser tests
        run: |
          sudo mkdir -p /dev/.pytest_cache && sudo chmod 777 /dev/.pytest_cache
          wait-for-it -h test.ksvotes.org -p 5432
          wait-for-it -h test.ksvotes.org -p 8000
          curl -vv -s http://test.ksvotes.org:8000/ > /dev/null
          DEBUG=pw:api make playwright
      - name: Docker logs
        run: |
          docker compose logs web
        if: failure()
      - name: Stop CI docker compose
        run: |
          make ci-stop
        if: always()
