# based on https://raw.githubusercontent.com/benoitc/gunicorn/master/examples/nginx.conf

worker_processes 1;

# we start as ksvotesapp user so no need to specify here
# user ksvotesapp ksvotesapp;
error_log  stderr warn;
pid /code/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {

  log_format upstream_time '[nginx] $remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent" '
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /dev/stdout upstream_time;
  sendfile on;

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server 127.0.0.1:8001 fail_timeout=0;
  }

  server {
    set $PORT 8000;
    # if no Host match, close the connection to prevent host spoofing
    listen $PORT default_server;
    return 444;
  }

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen $PORT;
    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name ksvotes.org www.ksvotes.org v3.ksvotes.org test.ksvotes.org stage.ksvotes.org;

    keepalive_timeout 5;

    # path for static files
    root /code/ksvotes/static;

    # strip /static prefix from any direct links
    # otherwise we would proxy to gunicorn/django to serve
    location ~ ^/static(/.*)$ {
      try_files $1 =404;
    }

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # heroku sets X-Forwarded-Proto already. leaving here for reference only, as django relies on this.
      #proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /code/ksvotes/static;
    }
  }
}
